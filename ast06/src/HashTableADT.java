//********************************************************************//  HashTableADT.java       				Authors: W Cutcliffe////  Defines the interface for a hash table collection.// 	No two items of the table have the same search key.//********************************************************************//package hashTable;public interface HashTableADT<KT, T>//public interface HashTableADT<KT extends Comparable<? super KT>, T extends KeyedItem<KT>>{   	//  Returns true if this hash table contains no elements.   	public boolean tableIsEmpty();   	//  Returns the number of elements in this hash table.   	public int tableLength();   	//  Adds an element to the hash table. 	public void tableInsert(KT key, T value) throws HashException;   	//  Finds and returns the element from the hash table.   	public T tableRetrieve (KT key);   	//  Removes and returns the specified element from the hash table.   	public boolean tableDelete (KT key);	// Hashes the key into a location	public int hashIndex (KT key);  	//  Returns true if the specified target element is in the hash table 	public boolean contains (KT key);   //	Increases the capacity and internally reorganizes this hash table,   //	in order to access elements more efficiently   //	private void rehash ( );}  // interface HashtableADT